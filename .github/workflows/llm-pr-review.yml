name: LLM PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths: ['**/*.cs']

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    if: contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get changed C# files
        id: changed-files
        run: |
          echo "FILES<<EOF" >> $GITHUB_OUTPUT
          git diff --name-only origin/master | grep '\.cs$' || true >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Read file contents
        id: read-files
        run: |
          content=""
          for file in $(echo "${{ steps.changed-files.outputs.FILES }}"); do
            echo "Reading $file"
            echo "--- $file ---" >> files.txt
            cat "$file" >> files.txt
            echo "\n\n" >> files.txt
          done
          echo "CONTENT<<EOF" >> $GITHUB_OUTPUT
          cat files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Review code with OpenAI
        id: ai-review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ASSISTANT_ID: ${{ secrets.OPENAI_ASSISTANT_ID }}
        run: |
          # Create a thread
          thread=$(curl -s -X POST https://api.openai.com/v1/threads \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' | jq -r '.id')

          # Attach your file content as a message
          curl -s -X POST https://api.openai.com/v1/threads/$thread/messages \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "role": "user",
              "content": "```csharp\n'$(cat files.txt)'\n```"
            }'

          # Run the Assistant
          run_id=$(curl -s -X POST https://api.openai.com/v1/threads/$thread/runs \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{ "assistant_id": "'"$OPENAI_ASSISTANT_ID"'" }' | jq -r '.id')

          # Wait for the run to complete
          while true; do
            status=$(curl -s https://api.openai.com/v1/threads/$thread/runs/$run_id \
              -H "Authorization: Bearer $OPENAI_API_KEY" | jq -r '.status')
            echo "Status: $status"
            [[ "$status" == "completed" ]] && break
            sleep 2
          done

          # Get response
          curl -s https://api.openai.com/v1/threads/$thread/messages \
            -H "Authorization: Bearer $OPENAI_API_KEY" > response.json